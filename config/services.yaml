# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    faceitApiToken: '%env(FACEIT_API_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Training\UI\Web\TrainingController:
        tags: ['controller.service_arguments']

    App\Faceit\UI\Web\FaceitController:
        tags: ['controller.service_arguments']

    App\Faceit\UI\Web\FaceitMatchController:
        tags: ['controller.service_arguments']

    Doctrine\DBAL\Connection:
        factory: [ 'Doctrine\DBAL\DriverManager', getConnection ]
        arguments:
            $params:
                driver: '%env(DB_DRIVER)%'
                dbname: '%env(DB_NAME)%'
                user: '%env(DB_USER)%'
                password: '%env(DB_PASS)%'
                host: '%env(DB_HOST)%'
                port: '%env(DB_PORT)%'

    GuzzleHttp\Client:
        class: GuzzleHttp\Client

    App\Faceit\Infrastructure\FaceitApiClient:
        arguments:
            $httpClient: '@GuzzleHttp\Client'
            $faceitApiToken: '%faceitApiToken%'


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
