{"version":3,"sources":["components/Navbar.js","pages/Home.js","components/PlayerInformation.js","components/PlayerMatchStatisticsCard.js","components/PlayerMatchesStatistics.js","components/PlayerGlobalStatisticsTab.js","components/PlayerGlobalStatistics.js","components/PlayerMatches.js","components/PlayerSegmentsStatisticsTab.js","components/PlayerSegmentsStatistics.js","pages/User.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","Typography","variant","className","classes","title","Button","color","disableElevation","style","marginLeft","to","textDecoration","useStyles","makeStyles","theme","root","width","maxWidth","minWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","Home","useState","users","setUsers","useEffect","axios","get","then","response","data","List","component","aria-labelledby","subheader","ListSubheader","id","map","user","nickname","ListItem","button","ListItemIcon","ListItemText","textAlign","primary","large","height","PlayerInformation","props","playerInformation","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","dangerouslySetInnerHTML","__html","levels","skill","level","minHeight","border","borderRadius","paddingTop","fontSize","fontWeight","elo","Avatar","alt","username","src","avatar","marginTop","Grid","container","item","xs","eloToPrevisionLevel","eloToNextLevel","LinearProgress","value","eloPercentageToNextLevel","1","2","3","4","5","6","7","8","9","10","bullet","display","margin","transform","pos","marginBottom","PlayerMatchStatisticsCard","statistics","Card","CardContent","gutterBottom","Divider","averageKd","alignItems","md","wins","orientation","flexItem","loses","total","PlayerMatchesStatistics","today","yesterday","month","sm","PlayerGlobalStatisticsTab","Paper","elevation","matches","isGoodWinRate","winRate","isGoodAverageKdRatio","averageKdRatio","headshots","isGoodAverageHeadshots","averageHeadshots","flexGrow","TabPanel","children","index","other","role","hidden","Box","p","PlayerGlobalStatistics","React","setValue","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","global","PlayerMatches","rowsPerPage","length","page","setPage","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","slice","scope","isWin","finishedAt","score","kills","assists","deaths","headshotsPercentage","tripleKills","quadroKills","pentaKills","mvps","isGoodKdRatio","kdRatio","isGoodKrRatio","krRatio","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","labelRowsPerPage","labelDisplayedRows","from","SelectProps","inputProps","native","onChangePage","newPage","ActionsComponent","TablePaginationActions","useTheme","flexShrink","IconButton","onClick","disabled","direction","Math","ceil","max","PlayerSegmentsStatisticsTab","segment","Chip","size","rounds","averageMvps","averageTripleKills","averageQuadroKills","averagePentaKills","isGoodAverageKills","averageKills","isGoodAverageAssists","averageAssists","isGoodAverageDeaths","averageDeaths","headshotsPerMatch","isGoodAverageKrRatio","averageKrRatio","tabs","borderRight","divider","PlayerSegmentsStatistics","segmentsValue","setSegmentsValue","handleSegmentsChange","GlobalTabPanel","segments","i","setProperties","User","routeData","useParams","userInformation","setUserInformation","userMatches","setUserMatches","userStatistics","setUserStatistics","isLoaded","setIsLoaded","all","params","getUserMatches","getUserStatistics","CircularProgress","disableShrink","ReactDOM","render","StrictMode","Container","exact","strict","path","document","getElementById"],"mappings":"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","file":"static/js/main.9d057450.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {classes} from \"istanbul-lib-coverage\";\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    ФейситСтатист+\r\n                </Typography>\r\n                <Button color=\"primary\" variant=\"contained\" disableElevation style={{marginLeft: '20px'}}>\r\n                    <Link to={\"/\"} style={{'color': 'white', textDecoration: 'none'}}>Главная страница</Link>\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        minWidth: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/api/v1/faceit/players')\r\n            .then((response) => {\r\n                setUsers(response.data);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                    Список доступных пользователей\r\n                </ListSubheader>\r\n            }\r\n            className={classes.root}\r\n        >\r\n            {users.map((user) => {\r\n                return (\r\n                    <div key={user.id}>\r\n                        <Link to={\"/\" + user.nickname} style={{textDecoration: 'none', color: 'black'}}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <SendIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText style={{textAlign: 'center'}} primary={user.nickname} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(18),\r\n        height: theme.spacing(18),\r\n    },\r\n}));\r\n\r\nexport default function PlayerInformation(props) {\r\n    const playerInformation = props.playerInformation;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div style={{textAlign: 'center'}}>\r\n                <Badge\r\n                    overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    badgeContent={<div style={{width: 50, height: 50}} dangerouslySetInnerHTML={{__html: levels[playerInformation.skill.level]}}/>}\r\n                >\r\n                    <Badge\r\n                        overlap=\"circle\"\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        badgeContent={<div style={{width: 45, minHeight: 30, border: '1px solid #FE1F00', borderRadius: 90, backgroundColor: '#1F1F22', paddingTop: 15, color: '#FE1F00', fontSize: 15, fontWeight: 'bold'}}>{playerInformation.skill.elo}</div>}\r\n                    >\r\n                        <Avatar alt={playerInformation.username} src={playerInformation.avatar} className={classes.large}/>\r\n                    </Badge>\r\n                </Badge>\r\n            </div>\r\n            <div style={{marginTop: 20}}>\r\n                <div>\r\n                    <Grid container>\r\n                        <Grid item xs={2} style={{textAlign: 'center', fontSize: 20}}>{playerInformation.skill.eloToPrevisionLevel}</Grid>\r\n                        <Grid item xs={8}/>\r\n                        <Grid item xs={2} style={{textAlign: 'center', fontSize: 20}}>+{playerInformation.skill.eloToNextLevel}</Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div>\r\n                    <LinearProgress variant=\"determinate\" value={playerInformation.skill.eloPercentageToNextLevel} style={{height: 15, marginTop: 5, borderRadius: 5}}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst levels = {\r\n    1: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_ee1c08a8\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.685 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.563-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.894 15.816L3.858 17.09a9.656 9.656 0 0 0 1.894 2.2l1.562-1.822a7.206 7.206 0 0 1-1.42-1.65z\" fill=\"#EEE\"/><path d=\"M11.765 10.233l-1.487.824v-1.034L12 8.948h.991V14.4h-1.226v-4.167z\" fill=\"#EEE\"/></svg>',\r\n    2: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_230d8c21\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.685 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.563-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.257 14.53l-2.249.842a9.613 9.613 0 0 0 2.743 3.917l1.563-1.822a7.206 7.206 0 0 1-2.057-2.938z\" fill=\"#1CE400\"/><path d=\"M10.05 13.157c0-.303.084-.566.252-.79a1.6 1.6 0 0 1 .655-.512 8.17 8.17 0 0 1 .748-.286 2.78 2.78 0 0 0 .663-.302c.157-.107.235-.233.235-.378v-.698c0-.173-.07-.288-.21-.344-.15-.062-.386-.092-.705-.092-.387 0-.896.07-1.529.21V9.04a8.523 8.523 0 0 1 1.756-.177c.66 0 1.15.101 1.47.303.324.201.487.537.487 1.008v.756c0 .285-.087.534-.26.747a1.567 1.567 0 0 1-.656.47c-.252.107-.51.202-.773.286a2.65 2.65 0 0 0-.68.336c-.162.123-.244.27-.244.437v.277h2.621v.916h-3.83v-1.243z\" fill=\"#1CE400\"/></svg>',\r\n    3: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_32f1620f\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.4 12a9.58 9.58 0 0 0 3.352 7.29l1.562-1.823A7.184 7.184 0 0 1 4.801 12H2.4z\" fill=\"#1CE400\"/><path d=\"M11.79 14.484c-.47 0-1.08-.042-1.831-.126v-.975l.269.05c.106.023.165.037.176.043l.286.05c.067.011.21.028.428.05.168.017.339.026.513.026.324 0 .548-.04.672-.118.128-.078.193-.227.193-.445v-.63c0-.263-.283-.395-.849-.395h-.99v-.84h.99c.437 0 .656-.16.656-.479v-.529a.453.453 0 0 0-.068-.269c-.044-.067-.126-.114-.243-.142a2.239 2.239 0 0 0-.504-.042c-.32 0-.812.033-1.479.1V8.94c.762-.05 1.3-.076 1.613-.076.683 0 1.176.079 1.479.235.308.157.462.434.462.832v.899a.62.62 0 0 1-.152.42.703.703 0 0 1-.37.227c.494.173.74.445.74.814v.89c0 .466-.16.799-.479 1-.319.202-.823.303-1.512.303z\" fill=\"#1CE400\"/></svg>',\r\n    4: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_5b6bcc44\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.91 6.91L5.211 5.211A9.57 9.57 0 0 0 2.4 12a9.58 9.58 0 0 0 3.352 7.289l1.562-1.822A7.184 7.184 0 0 1 4.801 12c0-1.988.805-3.788 2.108-5.09z\" fill=\"#FFC800\"/><path d=\"M12.303 13.3h-2.52v-.967l2.243-3.385h1.386v3.47H14v.881h-.588v1.1h-1.109v-1.1zm0-.883v-2.31l-1.47 2.31h1.47z\" fill=\"#FFC800\"/></svg>',\r\n    5: '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2.4A9.6 9.6 0 0 0 2.4 12a9.58 9.58 0 0 0 3.352 7.29l1.562-1.823A7.2 7.2 0 0 1 12 4.8V2.4z\" fill=\"#FFC800\"/><path d=\"M11.815 14.484c-.386 0-.966-.031-1.739-.093v-1.016c.695.129 1.218.193 1.571.193.308 0 .532-.033.672-.1a.357.357 0 0 0 .21-.337v-.814c0-.152-.05-.258-.151-.32-.101-.067-.266-.1-.496-.1h-1.68V8.948h3.444v.941H11.43v1.109h.856c.325 0 .642.061.95.185a.909.909 0 0 1 .554.865v1.142c0 .219-.042.415-.126.588-.084.168-.19.297-.32.387a1.315 1.315 0 0 1-.453.201c-.185.05-.364.084-.537.101a10.05 10.05 0 0 1-.538.017z\" fill=\"#FFC800\"/></svg>',\r\n    6: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_15a7d3ad\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.816 5.895a7.2 7.2 0 0 0-8.502 11.572l-1.562 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4c1.87 0 3.613.535 5.089 1.458l-1.273 2.037z\" fill=\"#FFC800\"/><path d=\"M11.992 14.484a5.99 5.99 0 0 1-.613-.025 2.48 2.48 0 0 1-.496-.11 1.24 1.24 0 0 1-.453-.243 1.184 1.184 0 0 1-.286-.437 1.89 1.89 0 0 1-.118-.689v-2.537c0-.268.045-.506.135-.714.095-.212.215-.375.361-.487.123-.095.288-.173.496-.235a2.71 2.71 0 0 1 .604-.126c.213-.011.406-.017.58-.017.24 0 .745.028 1.512.084v.9c-.756-.09-1.296-.135-1.621-.135-.269 0-.46.014-.571.042-.112.028-.188.084-.227.168-.034.078-.05.22-.05.428v.647h.898c.303 0 .521.005.655.017.135.005.286.03.454.075.18.045.31.11.395.193.09.079.168.2.235.362.062.168.092.366.092.596v.74c0 .257-.039.484-.117.68-.079.19-.18.338-.303.445-.112.1-.26.182-.445.243a2.04 2.04 0 0 1-.537.11 5.58 5.58 0 0 1-.58.025zm.017-.815c.246 0 .417-.014.512-.042.101-.028.165-.081.193-.16a1.51 1.51 0 0 0 .042-.428v-.79c0-.134-.016-.23-.05-.285-.034-.062-.104-.104-.21-.126a2.557 2.557 0 0 0-.496-.034h-.756v1.243c0 .19.014.328.042.412.034.084.101.14.202.168.106.028.28.042.52.042z\" fill=\"#FFC800\"/></svg>',\r\n    7: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_e3d9d650\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.934 7.92a7.2 7.2 0 1 0-10.62 9.546L5.752 19.29A9.58 9.58 0 0 1 2.4 12a9.6 9.6 0 0 1 17.512-5.44l-1.978 1.36z\" fill=\"#FFC800\"/><path d=\"M12.546 9.906H9.9v-.958h4v.84L11.807 14.4h-1.36l2.1-4.494z\" fill=\"#FFC800\"/></svg>',\r\n    8: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_0e5c44d1\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.2 12h2.4A9.6 9.6 0 0 0 12 2.4 9.6 9.6 0 0 0 2.4 12a9.58 9.58 0 0 0 3.352 7.29l1.562-1.823A7.2 7.2 0 1 1 19.2 12z\" fill=\"#FF6309\"/><path d=\"M12 14.484c-.723 0-1.252-.09-1.588-.269-.33-.18-.496-.49-.496-.932v-.941c0-.18.09-.347.269-.504.179-.157.392-.263.638-.32v-.033a.879.879 0 0 1-.504-.235.614.614 0 0 1-.218-.462v-.781c0-.392.143-.68.428-.866.291-.184.781-.277 1.47-.277s1.176.093 1.462.277c.291.185.437.474.437.866v.78a.614.614 0 0 1-.219.463.879.879 0 0 1-.504.235v.034c.247.056.46.162.639.319s.268.325.268.504v.94c0 .454-.17.768-.512.941-.342.174-.865.26-1.57.26zm0-3.293c.246 0 .416-.034.512-.1.1-.074.15-.188.15-.345v-.63c0-.163-.05-.277-.15-.345-.096-.072-.266-.109-.513-.109-.246 0-.42.037-.52.11-.096.067-.143.181-.143.344v.63a.41.41 0 0 0 .142.336c.09.073.264.11.521.11zm0 2.495c.24 0 .414-.014.52-.042.112-.028.185-.076.218-.143.04-.067.06-.174.06-.32v-.738c0-.163-.048-.283-.144-.362-.095-.072-.31-.109-.646-.109-.32 0-.535.037-.647.11-.107.067-.16.187-.16.36v.74c0 .145.017.252.05.32.04.066.113.114.219.142.112.028.288.042.53.042z\" fill=\"#FF6309\"/></svg>',\r\n    9: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_e6c73405\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.517 15.066a7.2 7.2 0 1 0-11.202 2.4L5.751 19.29A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.563 9.563 0 0 1-.91 4.089l-2.173-1.023z\" fill=\"#FF6309\"/><path d=\"M11.84 14.484c-.48 0-.999-.028-1.553-.084v-.874c.717.079 1.229.118 1.537.118.286 0 .493-.02.622-.059.128-.04.212-.112.252-.218.044-.107.067-.275.067-.504v-.513h-.907c-.303 0-.521-.003-.656-.008a2.63 2.63 0 0 1-.453-.084.898.898 0 0 1-.395-.193 1.052 1.052 0 0 1-.235-.37 1.706 1.706 0 0 1-.093-.588v-.74c0-.257.04-.48.118-.671.078-.196.18-.35.302-.462.112-.095.258-.174.437-.235.185-.062.367-.101.546-.118.213-.011.406-.017.58-.017.263 0 .47.009.621.025.157.012.322.045.496.101a1.129 1.129 0 0 1 .74.689 1.9 1.9 0 0 1 .117.689v2.537c0 .565-.171.971-.513 1.218-.336.24-.879.36-1.63.36zm.925-2.949V10.26c0-.19-.017-.322-.05-.395-.029-.073-.093-.12-.194-.143a2.73 2.73 0 0 0-.529-.034 2.11 2.11 0 0 0-.504.042.26.26 0 0 0-.193.152c-.034.072-.05.198-.05.378v.831c0 .135.016.233.05.294.033.056.1.095.201.118a2.7 2.7 0 0 0 .504.033h.765z\" fill=\"#FF6309\"/></svg>',\r\n    10: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" id=\"f_icon_aff4d555\"><circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1F1F22\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#CDCDCD\" fill-opacity=\".1\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.686 17.467a7.2 7.2 0 1 0-9.371 0l-1.563 1.822A9.58 9.58 0 0 1 2.4 12 9.6 9.6 0 0 1 12 2.4a9.6 9.6 0 0 1 9.6 9.6 9.58 9.58 0 0 1-3.352 7.29l-1.562-1.823z\" fill=\"#FE1F00\"/><path d=\"M9.233 10.233l-1.487.824v-1.034l1.722-1.075h.991V14.4H9.233v-4.167zm4.595 4.251c-.246 0-.448-.009-.604-.025a3.295 3.295 0 0 1-.513-.101 1.237 1.237 0 0 1-.462-.235 1.202 1.202 0 0 1-.294-.454 1.7 1.7 0 0 1-.126-.689v-2.612c0-.258.04-.485.118-.68a1.23 1.23 0 0 1 .302-.463c.107-.095.252-.17.437-.226a2.45 2.45 0 0 1 .554-.118c.213-.011.41-.017.588-.017.252 0 .454.009.605.025a2.4 2.4 0 0 1 .504.101c.202.062.361.143.479.244.118.1.218.246.302.437.084.19.126.422.126.697v2.612c0 .258-.042.485-.126.68a1.15 1.15 0 0 1-.302.454 1.32 1.32 0 0 1-.462.235c-.19.062-.372.098-.546.11a5.58 5.58 0 0 1-.58.025zm.017-.79c.235 0 .403-.014.504-.042a.306.306 0 0 0 .202-.176c.033-.084.05-.221.05-.412v-2.78c0-.19-.017-.328-.05-.412a.282.282 0 0 0-.202-.168c-.1-.033-.269-.05-.504-.05-.24 0-.414.017-.52.05a.282.282 0 0 0-.202.168c-.034.084-.05.221-.05.412v2.78c0 .19.016.328.05.412.033.084.1.143.201.176.107.028.28.042.521.042z\" fill=\"#FE1F00\"/></svg>',\r\n};","import React from 'react';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n    },\r\n    pos: {\r\n        marginTop: 12,\r\n        marginBottom: 6,\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nexport default function PlayerMatchStatisticsCard(props) {\r\n    const classes = useStyles();\r\n    const statistics = props.statistics;\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    {props.title}\r\n                </Typography>\r\n                <Divider/>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    Средний рейтинг\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                    {statistics.averageKd}\r\n                </Typography>\r\n                <Grid container style={{marginTop: 12}} alignItems=\"center\">\r\n                    <Grid item md>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                            Побед\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                            {statistics.wins}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Grid item md>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                            Поражений\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                            {statistics.loses}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Grid item md>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                            Всего\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                            {statistics.total}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport PlayerMatchStatisticsCard from \"./PlayerMatchStatisticsCard\";\r\n\r\nexport default function PlayerMatchesStatistics(props) {\r\n    const today = props.today;\r\n    const yesterday = props.yesterday;\r\n    const month = props.month;\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={4}>\r\n                    <PlayerMatchStatisticsCard statistics={today} title='Сегодня'/>\r\n                </Grid>\r\n                <Grid item sm={4}>\r\n                    <PlayerMatchStatisticsCard statistics={yesterday} title='Вчера'/>\r\n                </Grid>\r\n                <Grid item sm={4}>\r\n                    <PlayerMatchStatisticsCard statistics={month} title='За последний месяц'/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default function PlayerGlobalStatisticsTab(props) {\r\n    const statistics = props.statistics;\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                <Grid item md>\r\n                    <Paper elevation={3} style={{minHeight: 95}}>\r\n                        <div style={{textAlign: 'center', fontSize: '1.25rem', paddingTop: 10, minHeight: 30}}>Матчей</div>\r\n                        <div style={{textAlign: 'center', fontSize: '2rem', fontWeight: 'bold'}}>{statistics.matches}</div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md>\r\n                    <Paper elevation={3} style={{minHeight: 95}}>\r\n                        <div style={{textAlign: 'center', fontSize: '1.25rem', paddingTop: 10, minHeight: 30}}>Побед</div>\r\n                        <div style={{textAlign: 'center', fontSize: '2rem', fontWeight: 'bold'}}>{statistics.wins}</div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md>\r\n                    <Paper elevation={3} style={{minHeight: 95, ...(statistics.isGoodWinRate ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                        <div style={{textAlign: 'center', fontSize: '1.25rem', paddingTop: 10, minHeight: 30}}>Процент побед</div>\r\n                        <div style={{textAlign: 'center', fontSize: '2rem', fontWeight: 'bold'}}>{statistics.winRate}%</div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md>\r\n                    <Paper elevation={3} style={{minHeight: 95, ...(statistics.isGoodAverageKdRatio ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'}), }}>\r\n                        <div style={{textAlign: 'center', fontSize: '1.25rem', paddingTop: 10, minHeight: 30}}>Средний КД</div>\r\n                        <div style={{textAlign: 'center', fontSize: '2rem', fontWeight: 'bold'}}>{statistics.averageKdRatio}</div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md>\r\n                    <Paper elevation={3} style={{minHeight: 95}}>\r\n                        <div style={{textAlign: 'center', fontSize: '1rem', paddingTop: 10, minHeight: 30}}>Попаданий в голову</div>\r\n                        <div style={{textAlign: 'center', fontSize: '2rem', fontWeight: 'bold'}}>{statistics.headshots}</div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md>\r\n                    <Paper elevation={3} style={{minHeight: 95, ...(statistics.isGoodAverageHeadshots ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'}), }}>\r\n                        <div style={{textAlign: 'center', fontSize: '0.65rem', paddingTop: 10, minHeight: 30}}>Средний процент попаданий в голову</div>\r\n                        <div style={{textAlign: 'center', fontSize: '2rem', fontWeight: 'bold'}}>{statistics.averageHeadshots}%</div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PlayerGlobalStatisticsTab from \"./PlayerGlobalStatisticsTab\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function PlayerGlobalStatistics(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div style={{width: '100%', marginTop: 20}}>\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    centered\r\n                >\r\n                    <Tab label=\"За все время\" id='global-statistics-tab-0' />\r\n                    <Tab label=\"За месяц\" id='global-statistics-tab-1' />\r\n                </Tabs>\r\n            </Paper>\r\n\r\n            <TabPanel value={value} index={0}>\r\n                <PlayerGlobalStatisticsTab statistics={props.statistics.global}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <PlayerGlobalStatisticsTab statistics={props.statistics.month}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\n\r\nexport default function PlayerMatches(props) {\r\n    const matches = props.matches;\r\n    const rowsPerPage = matches.length <= 10 ? matches.length : 10;\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table style={{minWidth: 500}} aria-label=\"pagination table\">\r\n                <TableHead style={{backgroundColor: '#3F51B5'}}>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>Дата</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>Карта</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>Счет карты</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>K - A - D</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>В голову (% в голову)</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>3х / 4x / 5x убийств</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>MVPs</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>K/D Рейтинг</TableCell>\r\n                        <TableCell align=\"center\" style={{color: 'rgb(225,255,255)', fontSize: 12}}>K/R Рейтинг</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {matches.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((map) => (\r\n                        <TableRow key={map.finishedAt}>\r\n                            <TableCell component=\"th\" scope=\"row\" align=\"center\" style={{...(map.isWin ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                {map.finishedAt}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" style={{...(map.isWin ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                {map.map}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" style={{...(map.isWin ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                {map.score}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {map.kills} - {map.assists} - {map.deaths}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {map.headshots} ({map.headshotsPercentage}%)\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {map.tripleKills} / {map.quadroKills} / {map.pentaKills}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {map.mvps}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" style={{...(map.isGoodKdRatio ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'}), fontWeight: 'bold'}}>\r\n                                {map.kdRatio}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" style={{...(map.isGoodKrRatio ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'}), fontWeight: 'bold'}}>\r\n                                {map.krRatio}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[]}\r\n                            colSpan={9}\r\n                            count={matches.length}\r\n                            labelRowsPerPage={''}\r\n                            labelDisplayedRows={({from, to, count}) => `` }\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                                inputProps: { 'aria-label': 'Матчей на странице' },\r\n                                native: true,\r\n                            }}\r\n                            onChangePage={handleChangePage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nfunction TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div style={{flexShrink: 0, marginLeft: theme.spacing(2.5)}}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"Первая страница\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Предыдущая страница\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"Следующая страница\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"Последняя страница\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function PlayerSegmentsStatisticsTab(props) {\r\n    const segment = props.segment;\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Paper elevation={3} style={{minHeight: 345}}>\r\n                        <div style={{textAlign: 'center', paddingTop: 10}}>\r\n                            Статистика карты: <span style={{fontSize: 21, fontWeight: 'bold'}}>{segment.label}</span>\r\n                        </div>\r\n                        <div key={`${segment.id}-div`}>\r\n                            <ul key={`${segment.id}-matches-global`}>\r\n                                <li key={`${segment.id}-matches`} style={{fontSize: 14}}>Количество матчей: <Chip color='primary' size=\"small\" label={segment.matches}/> </li>\r\n                                <li key={`${segment.id}-rounds`} style={{fontSize: 14, marginTop: 5}}>Количество раундов: <Chip color='primary' size=\"small\" label={segment.rounds}/></li>\r\n                                <li key={`${segment.id}-winRate`} style={{fontSize: 14, marginTop: 5}}>Общий процент побед: <Chip color='primary' size=\"small\" label={`${segment.winRate}%`}/></li>\r\n                            </ul>\r\n                            <Divider variant={'middle'}/>\r\n                            <ul key={`${segment.id}-mvps-global`}>\r\n                                <li key={`${segment.id}-mvps`} style={{fontSize: 14, marginTop: 5}}>Количество MVP: <Chip color='primary' size=\"small\" label={segment.mvps}/></li>\r\n                                <li key={`${segment.id}-averageMvps`} style={{fontSize: 14, marginTop: 5}}>Среднее кол-во MVP за игру: <Chip color='primary' size=\"small\" label={segment.averageMvps}/></li>\r\n                            </ul>\r\n                            <Divider variant={'middle'}/>\r\n                            <ul key={`${segment.id}-kills-global`}>\r\n                                <li key={`${segment.id}-tripleKills`} style={{fontSize: 14}}>3x убийства: <Chip color='primary' size=\"small\" label={`${segment.tripleKills} (${segment.averageTripleKills})`}/> </li>\r\n                                <li key={`${segment.id}-quadroKills`} style={{fontSize: 14, marginTop: 5}}>4х убийства: <Chip color='primary' size=\"small\" label={`${segment.quadroKills} (${segment.averageQuadroKills})`}/></li>\r\n                                <li key={`${segment.id}-pentaKills`} style={{fontSize: 14, marginTop: 5}}>5х убийства: <Chip color='primary' size=\"small\" label={`${segment.pentaKills} (${segment.averagePentaKills})`}/></li>\r\n                            </ul>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={4}>\r\n                            <Paper elevation={3} style={{minHeight: 160, ...(segment.isGoodAverageKills ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                <div style={{textAlign: 'center', paddingTop: 15}}>\r\n                                    Убийства\r\n                                </div>\r\n                                <Divider style={{marginTop: 5}}/>\r\n                                <Grid container style={{marginTop: 30}} alignItems=\"center\">\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Общее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.kills}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Divider orientation=\"vertical\" flexItem />\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Среднее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.averageKills}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Paper elevation={3} style={{minHeight: 160, ...(segment.isGoodAverageAssists ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                <div style={{textAlign: 'center', paddingTop: 15}}>\r\n                                    Ассисты\r\n                                </div>\r\n                                <Divider style={{marginTop: 5}}/>\r\n                                <Grid container style={{marginTop: 30}} alignItems=\"center\">\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Общее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.assists}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Divider orientation=\"vertical\" flexItem />\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Среднее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.averageAssists}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Paper elevation={3} style={{minHeight: 160, ...(segment.isGoodAverageDeaths ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                <div style={{textAlign: 'center', paddingTop: 15}}>\r\n                                    Смерти\r\n                                </div>\r\n                                <Divider style={{marginTop: 5}}/>\r\n                                <Grid container style={{marginTop: 30}} alignItems=\"center\">\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Общее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.deaths}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Divider orientation=\"vertical\" flexItem />\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Среднее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.averageDeaths}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} style={{marginTop: 20}}>\r\n                        <Grid item xs={4}>\r\n                            <Paper elevation={3} style={{minHeight: 160, ...(segment.isGoodAverageHeadshots ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                <div style={{textAlign: 'center', paddingTop: 15}}>\r\n                                    Хэдшоты\r\n                                </div>\r\n                                <Divider style={{marginTop: 5}}/>\r\n                                <Grid container style={{marginTop: 30}} alignItems=\"center\">\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Среднее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.averageHeadshots}%\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Divider orientation=\"vertical\" flexItem />\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            За игру\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.headshotsPerMatch}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Paper elevation={3} style={{minHeight: 160, ...(segment.isGoodAverageKdRatio ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                <div style={{textAlign: 'center', paddingTop: 15}}>\r\n                                    K/D Рейтинг\r\n                                </div>\r\n                                <Divider style={{marginTop: 5}}/>\r\n                                <Grid container style={{marginTop: 30}} alignItems=\"center\">\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Среднее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.averageKdRatio}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Paper elevation={3} style={{minHeight: 160, ...(segment.isGoodAverageKrRatio ? {backgroundColor: 'rgba(72, 245, 66, 0.3)'} : {backgroundColor: 'rgba(247, 52, 52, 0.3)'})}}>\r\n                                <div style={{textAlign: 'center', paddingTop: 15}}>\r\n                                    K/R Рейтинг\r\n                                </div>\r\n                                <Divider style={{marginTop: 5}}/>\r\n                                <Grid container style={{marginTop: 30}} alignItems=\"center\">\r\n                                    <Grid item md>\r\n                                        <Typography style={{textAlign: 'center'}} color=\"textSecondary\">\r\n                                            Среднее\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"h3\" style={{textAlign: 'center'}}>\r\n                                            {segment.averageKrRatio}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport PlayerSegmentsStatisticsTab from \"./PlayerSegmentsStatisticsTab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: '100%',\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n}));\r\n\r\nexport default function PlayerSegmentsStatistics(props) {\r\n    const statistics = props.statistics;\r\n    const classes = useStyles();\r\n    const [segmentsValue, setSegmentsValue] = React.useState(0);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleSegmentsChange = (event, newValue) => {\r\n        setSegmentsValue(newValue);\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div style={{width: '100%', marginTop: 20}}>\r\n                <Paper>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        centered\r\n                    >\r\n                        <Tab label=\"За все время\" id='global-statistics-tab-0' />\r\n                        <Tab label=\"За месяц\" id='global-statistics-tab-1' />\r\n                    </Tabs>\r\n                </Paper>\r\n\r\n                <GlobalTabPanel value={value} index={0}>\r\n                    <Grid container>\r\n                        <Grid item xs={3}>\r\n                            <Tabs\r\n                                orientation=\"vertical\"\r\n                                variant=\"scrollable\"\r\n                                value={segmentsValue}\r\n                                onChange={handleSegmentsChange}\r\n                                aria-label=\"Vertical tabs example\"\r\n                                className={classes.tabs}\r\n                            >\r\n                                {statistics.global.segments.map((segment, i) => {\r\n                                    return (\r\n                                        <Tab key={`global-${i}-tab`} label={segment.label} {...setProperties(i)} />\r\n                                    );\r\n                                })}\r\n                            </Tabs>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            {statistics.global.segments.map((segment, i) => {\r\n                                return (\r\n                                    <TabPanel key={`global-${i}-tab-panel`} value={segmentsValue} index={i}>\r\n                                        <PlayerSegmentsStatisticsTab segment={segment}/>\r\n                                    </TabPanel>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </GlobalTabPanel>\r\n                <GlobalTabPanel value={value} index={1}>\r\n                    <Grid container>\r\n                        <Grid item xs={3}>\r\n                            <Tabs\r\n                                orientation=\"vertical\"\r\n                                variant=\"scrollable\"\r\n                                value={segmentsValue}\r\n                                onChange={handleSegmentsChange}\r\n                                aria-label=\"Vertical tabs example\"\r\n                                className={classes.tabs}\r\n                            >\r\n                                {statistics.month.segments.map((segment, i) => {\r\n                                    return (<Tab key={`month-${i}-tab`} label={segment.label} {...setProperties(i)} />);\r\n                                })}\r\n                            </Tabs>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            {statistics.month.segments.map((segment, i) => {\r\n                                return (\r\n                                    <TabPanel key={`month-${i}-tab-panel`} value={segmentsValue} index={i}>\r\n                                        <PlayerSegmentsStatisticsTab segment={segment}/>\r\n                                    </TabPanel>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </GlobalTabPanel>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction setProperties(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction GlobalTabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport PlayerInformation from \"../components/PlayerInformation\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport PlayerMatchesStatistics from \"../components/PlayerMatchesStatistics\";\r\nimport PlayerGlobalStatistics from \"../components/PlayerGlobalStatistics\";\r\nimport PlayerMatches from \"../components/PlayerMatches\";\r\nimport PlayerSegmentsStatistics from \"../components/PlayerSegmentsStatistics\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function User() {\r\n    let routeData = useParams();\r\n    const [userInformation, setUserInformation] = useState(null);\r\n    const [userMatches, setUserMatches] = useState(null);\r\n    const [userStatistics, setUserStatistics] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.all([\r\n            getUserInformation(routeData.username),\r\n            getUserMatches(routeData.username),\r\n            getUserStatistics(routeData.username)\r\n        ]).then((response) => {\r\n                setUserInformation(response[0].data);\r\n                setUserMatches(response[1].data);\r\n                setUserStatistics(response[2].data);\r\n                setIsLoaded(true);\r\n        });\r\n    }, []);\r\n\r\n    if (!isLoaded) {\r\n        return (\r\n            <div style={{textAlign: 'center', marginTop: 50}}>\r\n                <CircularProgress disableShrink />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                    <h1>{routeData.username}</h1>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider component=\"div\" />\r\n            <Grid container spacing={3} style={{marginTop: 30}}>\r\n                <Grid item xs={3} md={3}>\r\n                    <PlayerInformation playerInformation={userInformation}/>\r\n                </Grid>\r\n                <Grid item xs={9} md={9}>\r\n                    <PlayerMatchesStatistics today={userMatches.today} yesterday={userMatches.yesterday} month={userMatches.month} />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <PlayerGlobalStatistics statistics={userStatistics}/>\r\n            </Grid>\r\n            <Grid container style={{marginTop: 20}}>\r\n                <PlayerMatches matches={userMatches.matches}/>\r\n            </Grid>\r\n            <Grid container style={{marginTop: 20}}>\r\n                <PlayerSegmentsStatistics statistics={userStatistics}/>\r\n            </Grid>\r\n\r\n            <Grid container style={{marginBottom: 100}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getUserMatches(nickname) {\r\n    return axios.get('http://localhost:8080/api/v1/faceit/player/matches', {params: {nickname: nickname}});\r\n}\r\n\r\nfunction getUserStatistics(nickname) {\r\n    return axios.get('http://localhost:8080/api/v1/faceit/player/statistics', {params: {nickname: nickname}});\r\n}\r\n\r\nfunction getUserInformation(nickname) {\r\n    return axios.get('http://localhost:8080/api/v1/faceit/player', {params: {nickname: nickname}});\r\n}\r\n\r\n// function getUserMatches(username) {\r\n//     return {\r\n//         today: {\r\n//             total: 12,\r\n//             wins: 2,\r\n//             loses: 10,\r\n//             averageKd: 1.24,\r\n//         },\r\n//         yesterday: {\r\n//             total: 5,\r\n//             wins: 4,\r\n//             loses: 1,\r\n//             averageKd: 1.0,\r\n//         },\r\n//         month: {\r\n//             total: 17,\r\n//             wins: 6,\r\n//             loses: 11,\r\n//             averageKd: 0.87,\r\n//         },\r\n//         matches: [\r\n//             {\r\n//                 id: 1,\r\n//                 map: 'de_mirage',\r\n//                 score: '16 / 12',\r\n//                 finishedAt: '27-01-2021 21:57',\r\n//                 faceitUrl: 'https://google.com',\r\n//                 kills: 10,\r\n//                 assists: 5,\r\n//                 deaths: 20,\r\n//                 headshots: 10,\r\n//                 headshotsPercentage: 100,\r\n//                 tripleKills: 3,\r\n//                 quadroKills: 2,\r\n//                 pentaKills: 1,\r\n//                 mvps: 12,\r\n//                 kdRatio: 0.9,\r\n//                 krRatio: 0.8,\r\n//                 isWin: false,\r\n//                 isGoodKdRatio: false,\r\n//                 isGoodKrRatio: false,\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 map: 'de_nuke',\r\n//                 score: '16 / 12',\r\n//                 finishedAt: '27-01-2021 21:57',\r\n//                 faceitUrl: 'https://google.com',\r\n//                 kills: 30,\r\n//                 assists: 15,\r\n//                 deaths: 26,\r\n//                 headshots: 15,\r\n//                 headshotsPercentage: 50,\r\n//                 tripleKills: 10,\r\n//                 quadroKills: 25,\r\n//                 pentaKills: 0,\r\n//                 mvps: 2,\r\n//                 kdRatio: 6.5,\r\n//                 krRatio: 2,\r\n//                 isWin: true,\r\n//                 isGoodKdRatio: false,\r\n//                 isGoodKrRatio: false,\r\n//             },\r\n//             {\r\n//                 id: 3,\r\n//                 map: 'de_inferno',\r\n//                 score: '16 / 12',\r\n//                 finishedAt: '27-01-2021 21:57',\r\n//                 faceitUrl: 'https://google.com',\r\n//                 kills: 12,\r\n//                 assists: 2,\r\n//                 deaths: 15,\r\n//                 headshots: 8,\r\n//                 headshotsPercentage: 75,\r\n//                 tripleKills: 0,\r\n//                 quadroKills: 0,\r\n//                 pentaKills: 1,\r\n//                 mvps: 3,\r\n//                 kdRatio: 1.1,\r\n//                 krRatio: 1.2,\r\n//                 isWin: true,\r\n//                 isGoodKdRatio: true,\r\n//                 isGoodKrRatio: true,\r\n//             },\r\n//             {\r\n//                 id: 4,\r\n//                 map: 'de_dust2',\r\n//                 score: '16 / 12',\r\n//                 finishedAt: '27-01-2021 21:57',\r\n//                 faceitUrl: 'https://google.com',\r\n//                 kills: 60,\r\n//                 assists: 17,\r\n//                 deaths: 48,\r\n//                 headshots: 15,\r\n//                 headshotsPercentage: 12,\r\n//                 tripleKills: 4,\r\n//                 quadroKills: 0,\r\n//                 pentaKills: 0,\r\n//                 mvps: 15,\r\n//                 kdRatio: 2.5,\r\n//                 krRatio: 12.4,\r\n//                 isWin: false,\r\n//                 isGoodKdRatio: true,\r\n//                 isGoodKrRatio: true,\r\n//             },\r\n//         ]\r\n//     };\r\n// }\r\n//\r\n// function getUserStatistics(username) {\r\n//     return {\r\n//         global: {\r\n//             id: 1,\r\n//             matches: 123,\r\n//             wins: 10,\r\n//             winRate: 12,\r\n//             isGoodWinRate: false,\r\n//             averageKdRatio: 1.2,\r\n//             isGoodAverageKdRatio: true,\r\n//             headshots: 1234,\r\n//             averageHeadshots: 48,\r\n//             isGoodAverageHeadshots: true,\r\n//             segments: [\r\n//                 {\r\n//                     'id': 1,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_dust2',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 2,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_mirage',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 3,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_nuke',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 4,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_overpass',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 5,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_inferno',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 6,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_train',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 7,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_cache',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 }\r\n//             ],\r\n//         },\r\n//         month: {\r\n//             id: 2,\r\n//             matches: 10,\r\n//             wins: 5,\r\n//             winRate: 50,\r\n//             isGoodWinRate: true,\r\n//             averageKdRatio: 0.9,\r\n//             isGoodAverageKdRatio: false,\r\n//             headshots: 999,\r\n//             averageHeadshots: 12,\r\n//             isGoodAverageHeadshots: false,\r\n//             segments: [\r\n//                 {\r\n//                     'id': 8,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_dust2',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 9,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_mirage',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 10,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_nuke',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 11,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_overpass',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 12,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_inferno',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 13,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_train',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 },\r\n//                 {\r\n//                     'id': 14,\r\n//                     'type': 'competition',\r\n//                     'mode': '5v5',\r\n//                     'label': 'de_cache',\r\n//                     'image': 'https://google.com',\r\n//                     'kills': getRandomInt(100),\r\n//                     'averageKills': getRandomFloat(30),\r\n//                     'isGoodAverageKills': Math.random() < 0.5,\r\n//                     'assists': getRandomInt(100),\r\n//                     'averageAssists': getRandomFloat(10),\r\n//                     'isGoodAverageAssists': Math.random() < 0.5,\r\n//                     'deaths': getRandomInt(100),\r\n//                     'averageDeaths': getRandomFloat(20),\r\n//                     'isGoodAverageDeaths': Math.random() < 0.5,\r\n//                     'headshots': getRandomInt(100),\r\n//                     'totalHeadshots': getRandomInt(100),\r\n//                     'averageHeadshots': getRandomInt(60),\r\n//                     'isGoodAverageHeadshots': Math.random() < 0.5,\r\n//                     'headshotsPerMatch': getRandomFloat(12),\r\n//                     'krRatio': getRandomInt(100),\r\n//                     'averageKrRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKrRatio': Math.random() < 0.5,\r\n//                     'kdRatio': getRandomInt(100),\r\n//                     'averageKdRatio': getRandomFloat(2),\r\n//                     'isGoodAverageKdRatio': Math.random() < 0.5,\r\n//                     'tripleKills': getRandomInt(100),\r\n//                     'quadroKills': getRandomInt(50),\r\n//                     'pentaKills': getRandomInt(10),\r\n//                     'averageTripleKills': getRandomFloat(2),\r\n//                     'averageQuadroKills': getRandomFloat(1),\r\n//                     'averagePentaKills': getRandomFloat(1),\r\n//                     'mvps': getRandomInt(200),\r\n//                     'averageMvps': getRandomFloat(10),\r\n//                     'isGoodAverageMvps': Math.random() < 0.5,\r\n//                     'matches': getRandomInt(300),\r\n//                     'rounds': getRandomInt(2000),\r\n//                     'wins': getRandomInt(500),\r\n//                     'winRate': getRandomInt(90),\r\n//                     'isGoodWinRate': Math.random() < 0.5,\r\n//                 }\r\n//             ],\r\n//         },\r\n//     };\r\n// }\r\n//\r\n// function getRandomInt(max) {\r\n//     return Math.floor(Math.random() * Math.floor(max));\r\n// }\r\n//\r\n// function getRandomFloat(max) {\r\n//     return (Math.random() * max).toFixed(2);\r\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport './index.css';\nimport Container from \"@material-ui/core/Container\";\nimport Home from \"./pages/Home\";\nimport User from \"./pages/User\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <div>\n              <Navbar/>\n          </div>\n\n          <Container maxWidth=\"lg\" style={{paddingTop: '20px'}}>\n              <Switch>\n                  <Route exact strict path={\"/\"}><Home/></Route>\n                  <Route path={\"/:username\"}><User/></Route>\n              </Switch>\n          </Container>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}